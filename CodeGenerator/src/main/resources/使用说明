application.properties中配置
1. 数据源
2. 修改dao、service、serviceimpl、model、controller包路径
3. 默认开启了swagger，可以关闭

4. 自定义模板
    resources/template：模板根路径
    controller/Controller.java      控制层模板
    dao/Mapper.java                 Dao层模板
    pojo/Pojo.java                  Model模板
    service/Service.java            业务层接口模板
    service/impl/ServiceImpl.java   业务层接口实现类模板
    swagger/swagger.json            Swagger文档模板
    result/*.java		    两个工具类

  注意：模板的配置遵循Freemarker指令规范。

5. 数据模型对应的key和说明
    table:表名，小写开始，去掉了tab_,tb_,_转驼峰
    Table:表名，大写开始，去掉了tab_,tb_,_转驼峰
    swagger:是否启用swagger，true：启用，false：关闭
    TableName:表的真实名字
    models:JavaBean的所有属性信息
    typeSet:JavaBean的所有类型Set集合
    keySetMethod:主键的set方法，例如 setId,这里没有加括号
    keyType:主键的类型，例如Long，这里没有权限定包路径
    package_controller:控制层包路径
    package_pojo:pojo包路径
    package_mapper:dao包路径
    package_service:service接口包路径
    package_service_impl：serviceImpl实现类包路径

6. 多条件搜索时，如果属性名字包含name、title，则会进行like模糊搜索

使用方法：

1. 修改application.properties文件中相关配置，然后运行CodeApplication类的main方法，生成代码

2. 将生成的包直接复制到你的项目中去

3. pom.xml文件中已经导入的需要用到的依赖包，开发者可以直接使用

4. 将application.yml文件也复制到你的项目的resource目录下，修改相关配置

5、在新项目的启动主程序前要加上@MapperScan("xxx.xxx.dao")注解

6. 当开启了Swagger之后，将com.pkx.code.config包下的SwaggerConfig类拷贝到
   项目下与启动类XxxApplication同级包或其子包下，修改xxx.yyy.controller包名修改为真实包名即可，
   运行启动类之后，即可通过浏览器访问：http://项目真实访问地址/swagger-ui.html 查看Swagger生成的API接口

PS: 有一个小问题，就是表名中不能包含"result"这个字符串！因为和result包冲突:)



